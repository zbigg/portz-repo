#!/bin/sh
name=ace-tao

version=6.2.3
baseurl=http://download.dre.vanderbilt.edu/previous_versions/ACE+TAO-${version}.tar.bz2
web=http://www.cs.wustl.edu/~schmidt/ACE.html

mingw_configure() {
    export ACE_ROOT=$(pwd)

    cat << 'EOF' >> ${ACE_ROOT}/include/makeinclude/platform_macros.GNU
ifeq ($(threads),1)
  LDFLAGS += -mthreads
endif # threads
EOF

}

acetao_configure() {
    export ACE_ROOT=$(pwd)
    
    echo "#include \"ace/config-$1.h\"" > ${ACE_ROOT}/ace/config.h
    
    cat << EOF > ${ACE_ROOT}/include/makeinclude/platform_macros.GNU
include \$(ACE_ROOT)/include/makeinclude/platform_$2.GNU
EOF
}


configure_step()
{
    set -x
    case "$OSTYPE" in
    msys)
        acetao_configure win32 mingw32
        mingw_configure
        ;;
    linux-*)
        acetao_configure linux linux        
        ;;
    darwin12|darwin*)
        acetao_configure macosx-lion macosx_lion
        ;;
    *)
        echo "not supported platform $OSTYPE"
        exit 1
        ;;
    esac

    #(cd build ; ../configure --prefix=${prefix} --exec_prefix=${exec_prefix} ${configure_options} )
}

build_step() {
    #set -x
    export ACE_ROOT=$(pwd)
    export TAO_ROOT=${ACE_ROOT}/TAO
    export DYLD_LIBRARY_PATH="$ACE_ROOT/lib:$DYLD_LIBRARY_PATH"
    
    portz_invoke ${MAKE_PARALLEL} -C ace
    portz_invoke ${MAKE_PARALLEL} -C apps/gperf
    portz_invoke ${MAKE_PARALLEL} -C TAO/TAO_IDL
    portz_invoke ${MAKE_PARALLEL} -C TAO/tao
}

install_staging_step()
{
    #set -x
    
    if [ "$OSTYPE" == "msys" ] ; then
        EXE=.exe
    fi
    
    export ACE_ROOT=$(pwd)
    export TAO_ROOT=${ACE_ROOT}/TAO

    # ace includes
    pushd ace
    for X in $(find . -name "*.h" | xargs -n 1 dirname | sort -u ) ; do
        T=${DESTDIR}${prefix}/include/ace/${X}
        mkdir -p ${T}
        cp  -vf ${X}/*.h ${T}
    done

    for X in $(find . -name "*.h" | xargs -n 10 egrep -l '#(.*)include(.+)\.cpp' | sed -e 's/\.h$/.cpp/')
    do
       T=${DESTDIR}${prefix}/include/ace/${X}
       D=$(dirname $T)
        mkdir -p ${D}
        cp  -vf ${X} ${D}
    done
    popd

    # ace inlines
    pushd ace
    for X in $(find . -name "*.inl" | xargs -n 1 dirname | sort -u ) ; do
        mkdir -p ${DESTDIR}${prefix}/include/ace/${X}
        cp  -vf ${X}/*.inl ${DESTDIR}${prefix}/include/ace/${X}
    done
    popd

    # tao includes
    pushd TAO/tao
    for X in $(find . -name "*.h" | xargs -n 1 dirname | sort -u ) ; do
        T=${DESTDIR}${prefix}/include/tao/${X}
        mkdir -p ${T}
        cp  -vf ${X}/*.h ${T}

    done
    for X in $(find . -name "*.h" | xargs -n 10 egrep -l '#(.*)include(.+)\.cpp' | sed -e 's/\.h$/.cpp/')
    do
       T=${DESTDIR}${prefix}/include/tao/${X}
       D=$(dirname $T)
        mkdir -p ${D}
        cp  -vf ${X} ${D}
    done
    popd

    # tao inlines
    pushd TAO/tao
    for X in $(find . -name "*.inl" | xargs -n 1 dirname | sort -u ) ; do
        mkdir -p ${DESTDIR}${prefix}/include/tao/${X}
        cp  -vf ${X}/*.inl ${DESTDIR}${prefix}/include/tao/${X}
    done
    popd

    # bin
    mkdir -p ${DESTDIR}${exec_prefix}/bin
    cp -vf TAO/TAO_IDL/tao_idl${EXE} ${DESTDIR}${exec_prefix}/bin
    cp -vf apps/gperf/src/ace_gperf${EXE} ${DESTDIR}${exec_prefix}/bin

    for f in `find ace TAO -name "*.dll"` ; do
        cp -vf $f ${DESTDIR}${exec_prefix}/bin
    done
    
    # libs    
    mkdir -p ${DESTDIR}${exec_prefix}/lib
    for f in `find ace TAO -name "*.so*" -o -name "*.dylib" -o -name "*.a"` ; do
        cp -vf $f ${DESTDIR}${exec_prefix}/lib
    done   
    
    #man 
    mkdir -p ${DESTDIR}${exec_prefix}/share/man/man1
    cp -vf TAO/TAO_IDL/tao_idl.1 ${DESTDIR}${exec_prefix}/share/man/man1
}

# jedit: :tabSize=8:indentSize=4:noTabs=true:mode=shellscript:

